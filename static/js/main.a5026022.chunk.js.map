{"version":3,"sources":["components/homePage.jsx","components/pagination.jsx","components/form.jsx","components/paginate.js","App.js","serviceWorker.js","index.js"],"names":["Home","state","react_default","a","createElement","className","Link","to","Component","Pagination","props","pagesCount","Math","ceil","obsCount","pages","_","range","map","page","key","currentPage","class","onClick","onPageChange","invertDirection","asc","desc","Form","list","specie","specieName","addNotes","found","time","image","errors","pageSize","columnToSort","sortDirection","sortColumn","path","order","schema","Joi","string","required","label","handleChange","e","Object","objectSpread","_this","currentTarget","name","value","Date","now","toLocaleString","setState","handleSubmit","preventDefault","concat","toConsumableArray","createEntry","obs","handleDelete","filteredList","filter","handlePageChange","handleSort","columnName","renderSortIcon","column","this","hydrateStateWithLocalStorage","window","addEventListener","saveStateToLocalStorage","bind","removeEventListener","localStorage","hasOwnProperty","getItem","JSON","parse","defineProperty","setItem","stringify","_this2","speciesList","items","pageNumber","startIndex","slice","take","paginate","orderBy","style","margin","onSubmit","textAlign","htmlFor","color","id","onChange","placeholder","type","defaultValue","marginBottom","cursor","marginTop","pagination","length","App","Switch","Route","component","exact","HomePage","Redirect","from","Boolean","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"wSA4BeA,6MAtBXC,MAAQ,2EAGJ,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,MACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,cAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aAAd,kBAAyCH,EAAAC,EAAAC,cAAA,WAAzC,eACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAASH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,SAAT,yBAE/BL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAXZG,qDCqBJC,EAvBI,SAACC,GAChB,IAAMC,EAAaC,KAAKC,KAAKH,EAAMI,SAAW,GAE9C,GAAmB,IAAfH,EAAkB,OAAO,KAC7B,IAAMI,EAAQC,IAAEC,MAAM,EAAGN,EAAa,GAKtC,OACIT,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACbU,EAAMG,IAAI,SAAAC,GAAI,OACXjB,EAAAC,EAAAC,cAAA,MAAIgB,IAAKD,EAAMd,UAAWc,IAAST,EAAMW,YAAc,mBAAqB,aAC5EnB,EAAAC,EAAAC,cAAA,KAAGkB,MAAM,YAAYC,QAAS,WAAKb,EAAMc,aAAaL,KAASA,oCCTzEM,EAAkB,CACpBC,IAAM,OACNC,KAAO,OAwLIC,6MApLP3B,MAAQ,CACJ4B,KAAO,GACPC,OAAQ,CAAEC,WAAa,GAAIC,SAAW,GAAIC,MAAQ,GAAGC,KAAM,GAAGC,MAAQ,GAAIf,IAAM,IAChFgB,OAAQ,GACRC,SAAU,EACVhB,YAAa,EACbiB,aAAc,GACdC,cAAe,GACfC,WAAY,CAAEC,KAAM,OAAQC,MAAO,WAiC9CC,OAAS,CACNZ,WAAYa,IAAIC,SAASC,WAAWC,MAAM,eAC1Cf,SAAUY,IAAIC,SAASC,WAAWC,MAAM,kBAGxCC,aAAe,SAACC,GACZ,IAAMnB,EAAMoB,OAAAC,EAAA,EAAAD,CAAA,GAAOE,EAAKnD,MAAM6B,QAC9BA,EAAOmB,EAAEI,cAAcC,MAAQL,EAAEI,cAAcE,MAC/CzB,EAAOV,IAAMoC,KAAKC,MAClB3B,EAAOI,MAAO,IAAIsB,MAAOE,iBACzBN,EAAKO,SAAS,CAAE7B,OAASA,OAE7B8B,aAAe,SAACX,GACZA,EAAEY,iBACF,IAAM/B,EAASsB,EAAKnD,MAAM6B,OAC1B,GAA0B,KAAtBA,EAAOC,YAAyC,KAApBD,EAAOE,UAAoC,KAAjBF,EAAOG,MAAa,CAC9E,IAAMJ,EAAI,GAAAiC,OAAAZ,OAAAa,EAAA,EAAAb,CAAOE,EAAKnD,MAAM4B,MAAlB,CAAwBC,IAElCsB,EAAKO,SAAS,CAAE9B,KAAMA,EACtBC,OAAQ,CAACC,WAAY,GAAIC,SAAS,GAAIC,MAAM,GAAGE,MAAO,GAAIf,IAAK,GAAIc,KAAK,UAI5E8B,YAAc,SAAAC,GACN,OAAS/D,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kBAC1BH,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,MAAIgB,IAAK6C,EAAI7C,KACblB,EAAAC,EAAAC,cAAA,UAAK6D,EAAIlC,YACT7B,EAAAC,EAAAC,cAAA,UAAK6D,EAAIhC,OACT/B,EAAAC,EAAAC,cAAA,UAAK6D,EAAIjC,UACT9B,EAAAC,EAAAC,cAAA,UAAK6D,EAAI/B,MACThC,EAAAC,EAAAC,cAAA,UAAK6D,EAAI9B,OAETjC,EAAAC,EAAAC,cAAA,MAAIgB,IAAK6C,EAAI7C,KAAKlB,EAAAC,EAAAC,cAAA,UAAQmB,QAAS,kBAAI6B,EAAKc,aAAaD,EAAI7C,MAAMf,UAAU,kBAA3D,iBAI1B6D,aAAe,SAAA9C,GACX,IACM+C,EADIjB,OAAAa,EAAA,EAAAb,CAAOE,EAAKnD,MAAM4B,MACFuC,OAAQ,SAAAH,GAAW,OAAOA,EAAI7C,MAAQA,IAChEgC,EAAKO,SAAS,CAAC9B,KAAMsC,OAEzBE,iBAAmB,SAAAlD,GACfiC,EAAKO,SAAU,CAAEtC,YAAcF,OAGnCmD,WAAa,SAACC,GACVnB,EAAKO,SAAW,SAAA1D,GAAK,MAAK,CAC1BqC,aAAciC,EACdhC,cACAtC,EAAMqC,eAAiBiC,EACrB9C,EAAgBxB,EAAMsC,eACtB,YAGNiC,eAAiB,SAAAC,GACd,MAAiC,QAA7BrB,EAAKnD,MAAMsC,cAAgCrC,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBACrDH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,wGAtFPqE,KAAKC,+BACLC,OAAOC,iBACP,eACAH,KAAKI,wBAAwBC,KAAKL,sDAGlCE,OAAOI,oBACP,eACAN,KAAKI,wBAAwBC,KAAKL,OAElCA,KAAKI,iFAGL,IAAK,IAAI1D,KAAOsD,KAAKzE,MACrB,GAAIgF,aAAaC,eAAe9D,GAAM,CACtC,IAAImC,EAAQ0B,aAAaE,QAAQ/D,GACjC,IACAmC,EAAQ6B,KAAKC,MAAM9B,GACnBmB,KAAKf,SAALT,OAAAoC,EAAA,EAAApC,CAAA,GAAiB9B,EAAMmC,IACrB,MAAON,GACTyB,KAAKf,SAALT,OAAAoC,EAAA,EAAApC,CAAA,GAAiB9B,EAAMmC,wDAGvB,IAAK,IAAInC,KAAOsD,KAAKzE,MACrBgF,aAAaM,QAAQnE,EAAKgE,KAAKI,UAAUd,KAAKzE,MAAMmB,yCAE5DA,EAAKmC,GACbmB,KAAKf,SAALT,OAAAoC,EAAA,EAAApC,CAAA,GAAiB9B,EAAMmC,qCA8DX,IAAAkC,EAAAf,KAGNgB,ECpHH,SAAmBC,EAAOC,EAAYvD,GACzC,IAAMwD,GAAcD,EAAa,GAAKvD,EACtC,OAAOrB,IAAE2E,GACRG,MAAMD,GACNE,KAAK,GACLxC,QD8GeyC,CADDhF,IAAEiF,QAAQvB,KAAKzE,MAAM4B,KAAM6C,KAAKzE,MAAMqC,aAAcoC,KAAKzE,MAAMsC,eAC7CmC,KAAKzE,MAAMoB,YAAaqD,KAAKzE,MAAMoC,UACxCnB,IAAIwD,KAAKV,aAEzC,OAEA9D,EAAAC,EAAAC,cAAA,WACQF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAK8F,MAAO,CAACC,OAAO,SACpBjG,EAAAC,EAAAC,cAAA,QAAMgG,SAAU1B,KAAKd,cACjB1D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQ6F,MAAO,CAACG,UAAW,WAAWnG,EAAAC,EAAAC,cAAA,qCACjDF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOkG,QAAQ,cAAf,QAAiCpG,EAAAC,EAAAC,cAAA,QAAM8F,MAAO,CAACK,MAAO,YAArB,MACjCrG,EAAAC,EAAAC,cAAA,SAAOkD,KAAK,aAAakD,GAAG,aAAajD,MAAOmB,KAAKzE,MAAM6B,OAAOC,WAAY0E,SAAU/B,KAAK1B,aAAc0D,YAAY,mBAAmBC,KAAK,UAInJzG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOkG,QAAQ,YAAf,aAAoCpG,EAAAC,EAAAC,cAAA,QAAM8F,MAAO,CAACK,MAAO,YAArB,KAApC,KACArG,EAAAC,EAAAC,cAAA,YAAUkD,KAAK,WAAWkD,GAAG,WAAWjD,MAAOmB,KAAKzE,MAAM6B,OAAOE,SAAUyE,SAAU/B,KAAK1B,aAAc0D,YAAY,cAAcC,KAAK,UAG3IzG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,uBAAcF,EAAAC,EAAAC,cAAA,QAAM8F,MAAO,CAACK,MAAO,YAArB,MACdrG,EAAAC,EAAAC,cAAA,UAASmD,MAAOmB,KAAKzE,MAAMgC,MAAOqB,KAAK,QAAQmD,SAAU/B,KAAK1B,aAAcwD,GAAG,SAC/EtG,EAAAC,EAAAC,cAAA,UAAQwG,cAAY,EAACvG,UAAU,YAA/B,qBACAH,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,iBAAiBiD,GAAG,KAAlC,oBACAtG,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,OAAOiD,GAAG,IAAxB,UACAtG,EAAAC,EAAAC,cAAA,UAAQmD,MAAM,SAASiD,GAAG,IAA1B,cAGJtG,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0BAAlB,YA1BZ,KA+BIH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACPH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACfH,EAAAC,EAAAC,cAAA,OAAK8F,MAAO,CAACW,aAAa,SAC1B3G,EAAAC,EAAAC,cAAA,MAAI8F,MAAO,CAACG,UAAU,WAAtB,mBAGEnG,EAAAC,EAAAC,cAAA,SAAOkB,MAAM,kBACZpB,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACAF,EAAAC,EAAAC,cAAA,MAAImB,QAAS,kBAAMkE,EAAKnB,WAAW,SAAS4B,MAAO,CAACY,OAAQ,YAA5D,gBAAsFpC,KAAKF,iBAA3F,KACAtE,EAAAC,EAAAC,cAAA,MAAImB,QAAS,kBAAMkE,EAAKnB,WAAW,UAAU4B,MAAO,CAACY,OAAQ,YAA7D,WAAkFpC,KAAKF,kBACvFtE,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,MAAImB,QAAS,kBAAMkE,EAAKnB,WAAW,SAAS4B,MAAO,CAACY,OAAQ,YAA5D,SAA+EpC,KAAKF,kBACpFtE,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,cAKCsF,EAEJxF,EAAAC,EAAAC,cAAA,OAAK8F,MAAO,CAACa,UAAW,SACrB7G,EAAAC,EAAAC,cAAC4G,EAAD,CAAYlG,SAAU4D,KAAKzE,MAAM4B,KAAKoF,OACzB5E,SAAU,GACVhB,YAAaqD,KAAKzE,MAAMoB,YACxBG,aAAckD,KAAKL,uBA3DvD,6BA7GmB7D,aEkBJ0G,0LApBX,OAEEhH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAEdH,EAAAC,EAAAC,cAAC+G,EAAA,EAAD,KACCjH,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAO3E,KAAK,QAAQ4E,UAAWzF,IAC/B1B,EAAAC,EAAAC,cAACgH,EAAA,EAAD,CAAO3E,KAAK,YAAY6E,OAAK,EAACD,UAAWE,IAGzCrH,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CAAUC,KAAK,IAAIH,OAAK,EAAC/G,GAAG,uBAXlBC,cCGEkH,QACW,cAA7B9C,OAAO+C,SAASC,UAEe,UAA7BhD,OAAO+C,SAASC,UAEhBhD,OAAO+C,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACD7H,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,KACA9H,EAAAC,EAAAC,cAAC6H,EAAD,OACkBC,SAASC,eAAe,SDsH5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a5026022.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// src= {require('./img/1.jpg')}\r\n\r\nclass Home extends Component {\r\n    state = {}\r\n     render() { \r\n        \r\n        return ( \r\n            <div className=\"bg\">\r\n                <div className=\"App\">\r\n                    <header className=\"App-header\">\r\n                    <h1 className=\"App-title\">Birds Watching <br/>Application</h1>\r\n                    <button className='button'><Link to=\"/form\">Add New Observation</Link></button>\r\n                    </header>\r\n                <div className='container'>\r\n\r\n                \r\n\r\n                </div>\r\n                   \r\n                </div>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Home","import React, { Component } from 'react';\r\nimport _ from 'lodash'\r\n\r\nconst Pagination = (props) => {\r\n    const pagesCount = Math.ceil(props.obsCount / 6)\r\n    // in case of only 1 page, we don't want to show 1\r\n    if (pagesCount === 1) return null\r\n    const pages = _.range(1, pagesCount + 1)\r\n    \r\n\r\n    \r\n\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n            {pages.map(page => (\r\n                <li key={page} className={page === props.currentPage ? 'page-item active' : 'page-item'}>\r\n                <a class=\"page-link\" onClick={()=>{props.onPageChange(page)}}>{page}</a></li>\r\n            ))}\r\n            </ul>\r\n        </nav>\r\n    )\r\n        \r\n     \r\n}\r\n \r\nexport default Pagination;","import React, { Component } from 'react';\r\nimport Pagination from './pagination'\r\nimport { paginate } from './paginate'\r\nimport \"font-awesome/css/font-awesome.css\"\r\nimport Joi from 'joi-browser'\r\nimport _ from 'lodash'\r\n\r\n\r\nconst invertDirection = {\r\n    asc : 'desc',\r\n    desc : 'asc'\r\n}\r\n  \r\nclass Form extends Component {\r\n        state = { \r\n            list : [],\r\n            specie: { specieName : '', addNotes : '', found : '',time: '',image : '', key : ''},            \r\n            errors: {},\r\n            pageSize: 3,\r\n            currentPage: 1,\r\n            columnToSort: '',\r\n            sortDirection: '',\r\n            sortColumn: { path: 'name', order: 'desc'}\r\n                   }\r\n\r\n                   componentDidMount() {\r\n                    this.hydrateStateWithLocalStorage();\r\n                    window.addEventListener(\r\n                    \"beforeunload\",\r\n                    this.saveStateToLocalStorage.bind(this)) }\r\n                \r\n                componentWillUnmount() {\r\n                    window.removeEventListener(\r\n                    \"beforeunload\",\r\n                    this.saveStateToLocalStorage.bind(this)\r\n                    );\r\n                    this.saveStateToLocalStorage();}\r\n                \r\n                hydrateStateWithLocalStorage() {\r\n                    for (let key in this.state) {\r\n                    if (localStorage.hasOwnProperty(key)) {\r\n                    let value = localStorage.getItem(key);\r\n                    try {\r\n                    value = JSON.parse(value);\r\n                    this.setState({ [key]: value });\r\n                    } catch (e) {\r\n                    this.setState({ [key]: value }); }}}}\r\n                \r\n                saveStateToLocalStorage() {\r\n                    for (let key in this.state) {\r\n                    localStorage.setItem(key, JSON.stringify(this.state[key]));}}\r\n\r\nupdateInput(key, value) {\r\n    this.setState({ [key]: value });}\r\n\r\n schema = {\r\n    specieName: Joi.string().required().label('Specie Name'),\r\n    addNotes: Joi.string().required().label('Description')\r\n}\r\n\r\n    handleChange = (e) => {\r\n        const specie = {...this.state.specie}\r\n        specie[e.currentTarget.name] = e.currentTarget.value\r\n        specie.key = Date.now()\r\n        specie.time = new Date().toLocaleString()\r\n        this.setState({ specie : specie })}\r\n    \r\n    handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const specie = this.state.specie\r\n        if (specie.specieName !== '' && specie.addNotes !== '' && specie.found !== ''){\r\n        const list = [...this.state.list, specie]\r\n        \r\n        this.setState({ list: list, \r\n        specie: {specieName: '', addNotes:'', found:'',image: '', key: '', time:'' }})\r\n        }}\r\n\r\n\r\n    createEntry = obs => {\r\n            return ( <table className=\"ui fixed table\">\r\n            <tbody>\r\n            <tr key={obs.key}>\r\n            <td>{obs.specieName}</td>\r\n            <td>{obs.found}</td>\r\n            <td>{obs.addNotes}</td>\r\n            <td>{obs.time}</td>\r\n            <td>{obs.image}</td>\r\n            \r\n            <td key={obs.key}><button onClick={()=>this.handleDelete(obs.key)} className=\"btn btn-danger\" >Delete</button></td>\r\n            </tr></tbody>\r\n            </table>)}\r\n\r\n    handleDelete = key => {\r\n        const list = [...this.state.list]\r\n        const filteredList = list.filter( obs => {   return obs.key !== key     })\r\n        this.setState({list: filteredList})  } \r\n    \r\n    handlePageChange = page => {\r\n        this.setState ({ currentPage : page})\r\n        }\r\n    \r\n    handleSort = (columnName) => {\r\n        this.setState ( state => ({\r\n        columnToSort: columnName,\r\n        sortDirection:\r\n        state.columnToSort === columnName\r\n        ? invertDirection[state.sortDirection]\r\n        : 'asc'\r\n        }))\r\n    } \r\n    renderSortIcon = column => {\r\n       if (this.state.sortDirection === \"asc\") return <i className='fa  fa-sort-asc' />\r\n       return <i className='fa fa-sort-desc' />}\r\n\r\n\r\n       render() { \r\n    const sorted = _.orderBy(this.state.list, this.state.columnToSort, this.state.sortDirection)\r\n    const species = paginate(sorted, this.state.currentPage, this.state.pageSize)\r\n    const speciesList = species.map(this.createEntry)\r\n   \r\nreturn (         \r\n          \r\n<div>\r\n        <div className=\"container\">\r\n            <div style={{margin:'50px'}}>\r\n            <form onSubmit={this.handleSubmit}>\r\n                <div className=\"ui inverted segment\">                \r\n                <div className=\"ui inverted form\">                \r\n                <div className=\"field\" style={{textAlign: 'center'}}><h1>Birds Observation Form</h1></div>\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"specieName\">Name <span style={{color: '#8B0000'}}>*</span></label>\r\n                        <input name=\"specieName\" id=\"specieName\" value={this.state.specie.specieName} onChange={this.handleChange} placeholder=\"Name of Specie..\" type=\"text\" />\r\n                       \r\n\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"addNotes\">Add Notes <span style={{color: '#8B0000'}}>*</span> </label>\r\n                        <textarea name=\"addNotes\" id=\"addNotes\" value={this.state.specie.addNotes} onChange={this.handleChange} placeholder=\"Add Notes..\" type=\"text\" />\r\n                    </div>\r\n                    \r\n                    <div className=\"field\">\r\n                        <label>Rarity <span style={{color: '#8B0000'}}>*</span></label>\r\n                        <select  value={this.state.found} name=\"found\" onChange={this.handleChange} id=\"found\">\r\n                        <option defaultValue className=\"disabled\">-- Select one  --</option>\r\n                        <option value=\"Extremely Rare\" id=\"1\"> Extremely Rare </option>\r\n                        <option value=\"Rare\" id=\"\"> Rare </option>\r\n                        <option value=\"Common\" id=\"\"> Common </option>\r\n                        </select>\r\n                    </div>\r\n                    <button className=\"ui submit button field\">Save</button>\r\n                </div></div></form>      \r\n            </div> </div>\r\n           \r\n            \r\n            <div className=\"container\">\r\n                    <div className=\"row\">\r\n                    \r\n                    <div className=\"col\">      \r\n                    <div style={{marginBottom:'10px'}}>\r\n                    <h1 style={{textAlign:'center'}}>YOUR SIGHTINGS</h1>\r\n\r\n                    </div>\r\n                      <table class=\"ui fixed table\">\r\n                       <thead >\r\n                       <tr>\r\n                       <th onClick={() => this.handleSort('name')} style={{cursor: 'pointer'}}> Specie Name {this.renderSortIcon()} </th>\r\n                       <th onClick={() => this.handleSort('found')} style={{cursor: 'pointer'}}> Rarity {this.renderSortIcon()}</th>\r\n                       <th>Description</th>\r\n                       <th onClick={() => this.handleSort('time')} style={{cursor: 'pointer'}}> Time {this.renderSortIcon()}</th>\r\n                       <th></th>\r\n                       <th></th>\r\n                       \r\n                       </tr>\r\n                       </thead>\r\n                       </table>\r\n                       {speciesList}\r\n\r\n                    <div style={{marginTop: '20px'}}>\r\n                       <Pagination obsCount={this.state.list.length}\r\n                                    pageSize={10}\r\n                                    currentPage={this.state.currentPage}\r\n                                    onPageChange={this.handlePageChange}/>\r\n                    </div>\r\n                    </div> \r\n            </div>\r\n    </div>                  </div>\r\n            \r\n           \r\n\r\n        \r\n         );\r\n    }}\r\n\r\n \r\nexport default Form;\r\n","import _ from 'lodash'\r\n\r\nexport function paginate (items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize\r\n    return _(items)\r\n    .slice(startIndex)\r\n    .take(6)\r\n    .value()\r\n}","import React, { Component } from 'react';\nimport { Route, Switch, Redirect } from 'react-router-dom'\nimport HomePage from './components/homePage'\nimport Form from './components/form'\n\nimport './App.css';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n\n      <div className=\"container\">      \n\n       <Switch>\n        <Route path=\"/form\" component={Form} />\n        <Route path=\"/homePage\" exact component={HomePage} />\n        \n        \n        <Redirect from=\"/\" exact to=\"/homePage\" />\n        \n        \n        </Switch>\n       \n      \n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport \"font-awesome/css/font-awesome.css\"\n\nReactDOM.render(\n        <BrowserRouter>\n        <App />\n        </BrowserRouter>, document.getElementById('root'));\n\n        \n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}